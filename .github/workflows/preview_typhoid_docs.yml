# This workflow will rebuild emodpy-typhoid Docs triggered when changes to rst, python, or requirements.txt files occur.
# It uses the new IDMPublicActions/BuildTheDocs action which:
#      - Build HTML (and it treats failures as warnings) and Text docs (which generates a downloable tar file)
#      - It uploads the generated files to IDMs Azure blob container
# If the action is triggered from a PR then it appends a message with the resulting URL for the HTML build.

name: Rebuild hiv Docs
on:
  push:
    paths: 
      - '**.py'
      - '**.yml'
      - '**/*docs/**'
      - '**.txt'
  pull_request:
    branches:
      - '*'  
  
jobs:
  emodpy-typhoid-Docs-Preview:
    runs-on: ubuntu-latest
    steps:
    - name: Repo Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{github.event.inputs.branch}} 

    # Environment Setup
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
          python-version: 3.9
          
    - name: Install emodpy-typhoid requirements
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt --index-url=https://packages.idmod.org/api/pypi/pypi-production/simple
        pip install -e . --index-url=https://packages.idmod.org/api/pypi/pypi-production/simple
        pip install -r docs/requirements.txt --index-url=https://packages.idmod.org/api/pypi/pypi-production/simple

    - name: Build using the new IDM Github Action
      uses:  IDMPublicActions/BuildTheDocs@v1.0.2
      with:
         blob_endpoint: 'https://idmdocsstaging.z5.web.core.windows.net'
         target_location: 'idm/${{ github.repository }}'
         blob_container_name: '$web'
         tar_file_name: 'emodpy-typhoid'
         service_principal_credentials:  ${{ secrets.BLOB_JSON_SERVICE_PRINCIPAL_CREDENTIALS }} 
         account_name: 'idmdocsstaging'
         cdn_profile_name: 'idmdocs-cdn-webprofile'
         cdn_endpoint_name: 'idmdocs-cdn-webendpoint'
         resource_group: 'IDMDocsPreviewGroup'
         pr_update_token: ${{ secrets.GITHUB_TOKEN }}

    - name: ALL YOUR LINKS
      run: |
        echo "${{ env.LINK_URL }}"
        echo "${{ env.LINK_TO_TAR }}"
